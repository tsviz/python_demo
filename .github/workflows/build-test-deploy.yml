name: build-test-deploy

on:
  push

env:
  SECRET_KEY: dummy
  total-runners: 5
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-app

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip' # caching pip dependencies
      - run: pip install -r requirements.txt

  run-parallel-tests:
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      matrix:
        group: [1, 2, 3, 4]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run pytest
        run: pytest --cov --splits 5 --group ${{ matrix.group }}
      - name: Upload coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage${{ matrix.group }}
          path: .coverage

  build-and-push-image:
      runs-on: ubuntu-latest
      needs:
        - run-parallel-tests
      steps:
        - uses: actions/checkout@v2
        # - name: Get tag
        #   id: tag
        #   uses: dawidd6/action-get-tag@v1
        - name: Log into registry
          uses: docker/login-action@v1
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}   
        - name: Build & Push
          run: docker push ghcr.io/tsviz/${{ github.repository }}:${{ github.run_number }}
          # uses: docker/build-push-action@v2
          # with:
          #   push: true
          #   build-args: |
          #     version=${{ steps.tag.outputs.tag }}
          #   tags: ${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}     
